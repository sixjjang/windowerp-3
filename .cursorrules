# Windowerp-2 프로젝트 작업 원칙

## 🛡️ 안전 우선 원칙

### 위험도 평가 필수
- 모든 수정 작업 전에 위험도를 평가하라
- 복잡한 로직이나 핵심 기능 수정 시 즉시 중단하고 사용자에게 보고
- 데이터 무결성 위험이 있는 작업은 절대 진행하지 말 것

### 단계별 접근
1. 코드 분석 및 영향도 평가
2. 복구 계획 수립
3. 단계별 수정 및 검증
4. 전체 테스트

### 금지 사항
- 복잡한 의존성 체인 수정
- 핵심 비즈니스 로직 대폭 변경
- 사용자 데이터 손실 위험 작업
- 성능 저하 가능성 있는 수정

## 🔧 기술적 가이드라인

### TypeScript
- strict 모드 유지
- 타입 안전성 보장
- any 타입 사용 최소화

### React
- 컴포넌트 생명주기 고려
- 상태 관리 안정성 유지
- 메모리 누수 방지

### 데이터 관리
- localStorage 사용 시 에러 핸들링 필수
- 데이터 백업 고려
- 무결성 검증

## 📝 작업 스타일

### 코드 수정
- 작은 단위로 수정
- 각 단계마다 테스트
- 명확한 주석 작성

### 에러 처리
- try-catch 블록 적극 활용
- 사용자 친화적 에러 메시지
- 로깅 및 디버깅 정보 제공

### 성능 고려
- 불필요한 리렌더링 방지
- 메모리 효율성 고려
- 번들 크기 최적화

## 🚨 위험 신호 시 대응

### 즉시 중단 조건
1. 복잡한 의존성 발견
2. 핵심 로직 수정 필요
3. 데이터 손실 위험
4. 성능 저하 가능성

### 보고 의무
- 위험 요소 발견 시 즉시 사용자에게 상세 설명
- 대안 제시 및 권장사항 제공
- 단계별 접근 방안 제안

## 🎯 우선순위

1. **안전성** - 데이터 보호 및 시스템 안정성
2. **사용성** - 사용자 경험 개선
3. **성능** - 시스템 효율성
4. **확장성** - 미래 확장 가능성

## 📋 작업 체크리스트

### 수정 전
- [ ] 위험도 평가 완료
- [ ] 복구 계획 수립
- [ ] 영향도 분석
- [ ] 테스트 계획 수립

### 수정 중
- [ ] 단계별 검증
- [ ] 에러 핸들링 확인
- [ ] 성능 영향 확인

### 수정 후
- [ ] 전체 기능 테스트
- [ ] 사용자 시나리오 검증
- [ ] 문서 업데이트 